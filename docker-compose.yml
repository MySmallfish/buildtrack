version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: buildtrack-postgres
    environment:
      POSTGRES_DB: buildtrack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: buildtrack-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Uncomment when ready to run API in Docker
  # api:
  #   build:
  #     context: .
  #     dockerfile: src/api/BuildTrack.Api/Dockerfile
  #   container_name: buildtrack-api
  #   environment:
  #     - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=buildtrack;Username=postgres;Password=postgres
  #     - S3__ServiceUrl=http://minio:9000
  #     - S3__AccessKey=minioadmin
  #     - S3__SecretKey=minioadmin
  #     - ASPNETCORE_ENVIRONMENT=Development
  #   ports:
  #     - "5000:8080"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     minio:
  #       condition: service_healthy

  # worker:
  #   build:
  #     context: .
  #     dockerfile: src/api/BuildTrack.Worker/Dockerfile
  #   container_name: buildtrack-worker
  #   environment:
  #     - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=buildtrack;Username=postgres;Password=postgres
  #     - S3__ServiceUrl=http://minio:9000
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

volumes:
  postgres_data:
  minio_data:
